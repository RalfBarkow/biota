{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T11:43:24.686458+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-11T10:17:42.392211+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KRMpseSQDQCrDP6pB0LgAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[wiki](http://code.fed.wiki.org/view/biota/view/biota-flagellum), [github](https://github.com/RalfBarkow/biota)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T11:54:27.311654+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-11T10:21:01.682897+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "VLYl2eSQDQCrDnzDB0LgAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#The Biota Computer [page](https://c2.com/~ward/biota/notes.txt)\nby Ward Cunningham\n\nBiota is a simulation of an imaginary computer with some unusual properties. Its memory is addressed by points held in registers that can be incremented in any of eight possible directions.\n\nPrograms are interpreted by following strings of non-blank instructions as they wind through memory. Loops and branches appear as exactly that. The program counter turns to avoid blanks and failing instructions.\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-11T08:13:31.977004+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-11T08:13:38.516889+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "viV77aqRDQCvmN3sCsuT9w=="
							},
							"code" : "Metacello new\n    baseline: 'Biota';\n    repository: 'github://RalfBarkow/biota:main/src';\n    load."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-01-11T08:07:17.411051+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-01-11T08:07:26.120933+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "G7kn16qRDQCpj3gwCsuT9w=="
										},
										"code" : "BaselineOfBiota loadLepiter"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-11T08:07:10.053789+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-11T08:07:10.053789+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "veCs1qqRDQCpjpQXCsuT9w=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "And then load the documentation in Glamorous Toolkit:"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-03T18:53:36.632342+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-11T09:36:02.529321+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "u6bY7xKRDQCVn5cQD0HSMQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Installation\n\n1. Launch [Glamorous Toolkit](https://gtoolkit.com/download/) and open a Playground.\n2. Paste the following lines into the playground and run them (Evalute):"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:00:27.375095+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:00:27.844059+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Mc5WcueQDQCrFU0sB0LgAg=="
							},
							"code" : "Biota"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:00:20.951432+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-11T09:36:02.530417+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "WL70ceeQDQCrFB/OB0LgAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Classes\n\nBiota -- A two dimensional space, addressed by points, which stores the characters that are biota programs and data. Class methods define the size of the space and a single character, called empty, that marks unused cells."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:22:41.560894+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:22:48.408069+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "fN3cweeQDQCm66wGBATrAg=="
							},
							"code" : "DisplayBiota"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:22:36.855441+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:22:36.855441+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "CwGVweeQDQCm6qT8BATrAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "DisplayBiota -- A kind of biota that echos it's modifications the computer display."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T17:00:47.680034+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T17:01:23.745487+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "0uqzIOmQDQCm8Q8pBATrAg=="
							},
							"code" : "BiotaIndex"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T17:00:40.59042+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T17:00:40.59042+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "madHIOmQDQCm7+pDBATrAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "BiotaIndex -- A kind of point that includes a direction and responds to turtle style protocol (go, turn)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-01-01T15:15:00.307621+01:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-01-11T19:10:26.408162+01:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "C6tepueQDQCrHarlB0LgAg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The loader expects data in odd numbered columns and control characters in the others. '$' marks the initial program counter; '#' the initial data pointer. (Use cut and paste to type these characters.)\n\nThe debugger will single step with each press of the space bar. Press and hold 'r' to run at high speed. 'q' will quit. (Collapse or frame all windows to the bottom inch of the display before running. Redraw screen when finished.)\n\nTestEngine -- An experimental biota engine with twelve instructions. Class methods answer sample programs written for this engine."
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:20:28.54585+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-01T15:20:45.026412+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ejfvueeQDQCm5mxLBATrAg=="
							},
							"code" : "BiotaEngine"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:20:24.701227+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T17:00:40.612719+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "c4a0ueeQDQCm5WZwBATrAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "BiotaEngine -- A processor that can interpret programs stored in a biota. Includes a loader and debugger. A class method constructs an instruction dispatch table from a method dictionary."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:15:07.097851+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T15:16:28.767875+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aE/GpueQDQCrHqdOB0LgAg=="
				},
				"code" : "TestEngine"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-04T23:04:11.24566+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-01-04T23:04:46.974592+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "y8g4jSqRDQCiPxVeAc60xw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Many instructions just move the data counter (DC) [page](https://wiki.c2.com/?BiotaLanguage)\n\n    s -- straight: move DC in the current direction. Fail if that cell is empty.\n    b -- backup: move DC opposite the current direction. Fail if that cell is empty.\n    t -- turn DC right 45 degrees\n    u -- unturn: turn DC left 45 degrees\n    g -- go to a non-empty character ahead (tries to move DC straight ahead, then right and left 45 degrees, then 90, then 135, then back).\n\nOther instructons write to the memory at or near the data counter\n\n    c -- clear character at DC. Fails if already empty.\n    d -- duplicate the current data into the cell left of the DC. Fails if source cell is empty or target cell is non-empty.\n\nOne instruction exists only to connect instructions into loops that the program counter follows\n\n    . -- no-op, a non-empty do nothing. "
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T23:02:37.468583+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T23:02:37.468583+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Lxc7iCqRDQCiPAZGAc60xw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The instructions 't' and 'u' turn right and left. 's' and 'b' step forward and backward. 'd' and 'r' duplicate data, 'r' more aggressively. 'c' clears data to blank. 'f' faces the data pointer at the nearest data while 'h' alignes it with the program counter. 'g' combines 'f' and 's'. 'a' and 'q' are obsolete and should be avoided."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T11:53:48.941253+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T23:02:37.486846+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "d23V1uSQDQCrDUYaB0LgAg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## New Methods\n\nPoint offset -- Computes the byte offset in a linear memory (i.e. a string) corresponding to a given point.\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:43:36.111532+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:43:37.004171+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "RT6iQyqRDQCh7unvAc60xw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Biota Language Interpreter"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:43:46.044108+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:43:48.971192+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "TuhSRCqRDQCh8Kk4Ac60xw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[](https://c2.com/Biota/JavaScript.html)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:44:19.208282+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:44:19.208282+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "u/bERiqRDQCh9r4PAc60xw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This page is my current best guess at the semantics of Ward Cunningham's Biota language. I would welcome corrections. The source is in biota.js\n"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:44:07.878161+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-04T22:44:19.22579+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3JkMRiqRDQCh85HvAc60xw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Start by selecting a sample or Show your own program below. Even columns are code and data. Odd columns have control characters: '$' for the program counter, '#' for the data counter."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-01-01T11:43:16.440732+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-01-11T10:22:16.535124+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Biota"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "970f29b1-e490-0d00-ab0b-b5f90742e002"
	}
}